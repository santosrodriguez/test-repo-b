name: Terraform Apply

on:
  push:
    branches: [main]
    paths:
      - '**/*.tf'
      - 'environments/**'
      - '.github/workflows/terraform-plan.yml'
      - '.github/workflows/terraform-apply.yml'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: dev
        type: choice
        options:
          - dev
          - int
          - crt
          - prd

permissions:
  contents: read
  id-token: write

env:
  TF_IN_AUTOMATION: true
  ARM_USE_OIDC: true
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

jobs:
  apply:
    name: Apply ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment || 'dev' }}
    runs-on: ubuntu-latest
    environment: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment || 'dev' }}
    steps:
      - name: Resolve environment
        id: resolve-environment
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "selected=${{ github.event.inputs.environment }}" >> "$GITHUB_OUTPUT"
          else
            echo "selected=dev" >> "$GITHUB_OUTPUT"
          fi

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Export ARM OIDC token path
        run: |
          if [ -z "${AZURE_FEDERATED_TOKEN_FILE:-}" ]; then
            echo "AZURE_FEDERATED_TOKEN_FILE is not set after azure/login" >&2
            exit 1
          fi
          {
            echo "ARM_OIDC_TOKEN_FILE_PATH=$AZURE_FEDERATED_TOKEN_FILE"
            echo "ARM_OIDC_TOKEN_FILE=$AZURE_FEDERATED_TOKEN_FILE"
          } >> "$GITHUB_ENV"
          if [ -n "${ACTIONS_ID_TOKEN_REQUEST_TOKEN:-}" ]; then
            echo "ARM_OIDC_TOKEN=$ACTIONS_ID_TOKEN_REQUEST_TOKEN" >> "$GITHUB_ENV"
          fi

      - name: Render backend config
        run: |
          cat <<'EOF' > backend.auto.tfbackend
          resource_group_name  = "${{ secrets.TF_RESOURCE_GROUP_NAME }}"
          storage_account_name = "${{ secrets.TF_STORAGE_ACCOUNT }}"
          container_name       = "${{ secrets.TF_CONTAINER_NAME }}"
          key                  = "states/${{ steps.resolve-environment.outputs.selected }}/terraform.tfstate"
          EOF

      - name: Terraform Init
        run: terraform init -backend-config=backend.auto.tfbackend

      - name: Terraform Plan
        run: |
          terraform plan \
            -var-file="environments/${{ steps.resolve-environment.outputs.selected }}/terraform.tfvars" \
            -var="environment=${{ steps.resolve-environment.outputs.selected }}" \
            -out=tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
