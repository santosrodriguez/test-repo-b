name: Terraform Apply

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: dev
        type: choice
        options:
          - dev
          - int
          - crt
          - prd
  workflow_run:
    workflows: ["Terraform Plan"]
    types:
      - completed

permissions:
  contents: read
  id-token: write

env:
  TF_IN_AUTOMATION: true
  ARM_USE_OIDC: true

jobs:
  apply:
    name: Apply ${{ matrix.environment }}
    runs-on: ubuntu-latest
    environment: ${{ matrix.environment }}
    strategy:
      matrix:
        include:
          - environment: dev
          - environment: int
          - environment: crt
          - environment: prd
    
    steps:
      - name: Decide whether this matrix row should run
        id: decide
        run: |
          if [ "${{ github.event_name }}" = "workflow_run" ]; then
            if [ "${{ github.event.workflow_run.conclusion }}" != "success" ] || [ "${{ github.event.workflow_run.head_branch }}" != "main" ]; then
              echo "should_run=false" >> "$GITHUB_OUTPUT"
              exit 0
            else
              echo "should_run=true" >> "$GITHUB_OUTPUT"
            fi
          else
            if [ "${{ matrix.environment }}" != "${{ github.event.inputs.environment }}" ]; then
              echo "should_run=false" >> "$GITHUB_OUTPUT"
            else
              echo "should_run=true" >> "$GITHUB_OUTPUT"
            fi
          fi

      - name: Checkout
        if: ${{ steps.decide.outputs.should_run == 'true' }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Terraform
        if: ${{ steps.decide.outputs.should_run == 'true' }}
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Version
        if: ${{ steps.decide.outputs.should_run == 'true' }}
        run: terraform version

      - name: Azure Login
        if: ${{ steps.decide.outputs.should_run == 'true' }}
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Export ARM OIDC token path
        if: ${{ steps.decide.outputs.should_run == 'true' }}
        run: |
          if [ -z "${AZURE_FEDERATED_TOKEN_FILE:-}" ]; then
            echo "AZURE_FEDERATED_TOKEN_FILE is not set after azure/login" >&2
            exit 1
          fi
          {
            echo "ARM_OIDC_TOKEN_FILE_PATH=$AZURE_FEDERATED_TOKEN_FILE"
            echo "ARM_OIDC_TOKEN_FILE=$AZURE_FEDERATED_TOKEN_FILE"
          } >> "$GITHUB_ENV"
          if [ -n "${ACTIONS_ID_TOKEN_REQUEST_TOKEN:-}" ]; then
            echo "ARM_OIDC_TOKEN=$ACTIONS_ID_TOKEN_REQUEST_TOKEN" >> "$GITHUB_ENV"
          fi

      - name: Render backend config
        if: ${{ steps.decide.outputs.should_run == 'true' }}
        run: |
          printf '%s\n' \
            "resource_group_name  = \"${{ secrets.TF_RESOURCE_GROUP_NAME }}\"" \
            "storage_account_name = \"${{ secrets.TF_STORAGE_ACCOUNT }}\"" \
            "container_name       = \"${{ secrets.TF_CONTAINER_NAME }}\"" \
            "key                  = \"states/${{ matrix.environment }}/terraform.tfstate\"" \
          > backend.auto.tfbackend

      - name: Download Plan (from triggering workflow)
        if: ${{ steps.decide.outputs.should_run == 'true' && github.event_name == 'workflow_run' }}
        uses: actions/download-artifact@v4
        with:
          name: tfplan-${{ matrix.environment }}
          path: .
          run-id: ${{ github.event.workflow_run.id }}

      - name: Terraform Init
        if: ${{ steps.decide.outputs.should_run == 'true' }}
        run: terraform init -backend-config=backend.auto.tfbackend

      - name: Terraform Plan (create plan for manual dispatch)
        if: ${{ steps.decide.outputs.should_run == 'true' && github.event_name == 'workflow_dispatch' }}
        run: |
          terraform plan \
            -var-file="environments/${{ matrix.environment }}/terraform.tfvars" \
            -var="environment=${{ matrix.environment }}" \
            -out=tfplan

      - name: Terraform Apply
        if: ${{ steps.decide.outputs.should_run == 'true' }}
        run: |
          if [ "${{ github.event_name }}" = "workflow_run" ]; then
            PLAN_FILE="tfplan-${{ matrix.environment }}"
          else
            PLAN_FILE="tfplan"
          fi
          terraform apply -auto-approve "$PLAN_FILE"

      - name: Cleanup backend file
        if: always()
        run: |
          rm -f backend.auto.tfbackend || true
